{"version":3,"sources":["App.js","index.js"],"names":["App","props","ref","React","createRef","color","geometry","THREE","material","cube","position","x","Math","random","y","this","scene","add","camera","z","setTimeout","animate","requestAnimationFrame","rotation","renderer","render","window","innerWidth","innerHeight","setSize","appendChild","domElement","hLight","dLight","set","target","renderCube","PureComponent","ReactDOM","document","getElementById"],"mappings":"kMAgEeA,G,wDA1Db,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,IAAMC,IAAMC,YAFA,E,uDAKRC,GAAQ,IAAD,OAEVC,EAAW,IAAIC,IACfC,EAAW,IAAID,IAAwB,CAAEF,UACzCI,EAAO,IAAIF,IAAWD,EAAUE,GACtCC,EAAKC,SAASC,EAAoB,EAAhBC,KAAKC,SACvBJ,EAAKC,SAASI,EAAoB,EAAhBF,KAAKC,SACvBE,KAAKC,MAAMC,IAAIR,GACfM,KAAKG,OAAOR,SAASS,EAAI,EAOzBC,YANgB,SAAVC,IACJC,sBAAsBD,GACtBZ,EAAKc,SAASZ,GAAK,IACnBF,EAAKc,SAAST,GAAK,IACnB,EAAKU,SAASC,OAAO,EAAKT,MAAO,EAAKE,UAEJ,IAAhBN,KAAKC,Y,0CAKzBE,KAAKC,MAAQ,IAAIT,IACjBQ,KAAKG,OAAS,IAAIX,IAAwB,GAAImB,OAAOC,WAAaD,OAAOE,YAAa,GAAK,KAC3Fb,KAAKS,SAAW,IAAIjB,IACpBQ,KAAKS,SAASK,QAAQH,OAAOC,WAAa,GAAID,OAAOE,YAAc,IACnEb,KAAKb,IAAI4B,YAAYf,KAAKS,SAASO,YAGnC,IAGMC,EAAS,IAAIzB,IAHF,SACI,SACH,GAElBQ,KAAKC,MAAMC,IAAIe,GAEf,IACMC,EAAS,IAAI1B,IADL,SAJI,GAMlB0B,EAAOvB,SAASwB,IAAI,EAAG,GAAI,GAC3BD,EAAOE,OAAOzB,SAASwB,KAAK,EAAG,EAAG,GAClCnB,KAAKC,MAAMC,IAAIgB,GACflB,KAAKC,MAAMC,IAAIgB,EAAOE,QAGtBpB,KAAKqB,WAAW,OAChBrB,KAAKqB,WAAW,UAChBrB,KAAKqB,WAAW,Y,+BAGR,IAAD,OACP,OACE,yBAAKlC,IAAK,SAAAA,GAAG,OAAI,EAAKA,IAAMA,S,GAvDhBmC,kBCAlBC,IAASb,OAAO,kBAAC,EAAD,MAASc,SAASC,eAAe,U","file":"static/js/main.8739df86.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport * as THREE from \"three\";\nimport './App.css';\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  renderCube(color) {\n\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshPhongMaterial({ color });\n    const cube = new THREE.Mesh(geometry, material);\n    cube.position.x = Math.random() * 2;\n    cube.position.y = Math.random() * 2;\n    this.scene.add(cube);\n    this.camera.position.z = 5;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.02;\n      this.renderer.render(this.scene, this.camera);\n    };\n    setTimeout(animate, Math.random() * 2000);\n  }\n\n  componentDidMount() {\n    // Create basic scene\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(window.innerWidth - 10, window.innerHeight - 10);\n    this.ref.appendChild(this.renderer.domElement);\n\n    // Add lighting\n    const skyColor = 0xB1E1FF;\n    const groundColour = 0xB97A20;\n    const intensity = 1;\n    const hLight = new THREE.HemisphereLight(skyColor, groundColour, intensity);\n    this.scene.add(hLight);\n\n    const color = 0xFFFFFF;\n    const dLight = new THREE.DirectionalLight(color, intensity);\n    dLight.position.set(0, 10, 0);\n    dLight.target.position.set(-5, 0, 0);\n    this.scene.add(dLight);\n    this.scene.add(dLight.target);\n\n    // Render some cubes\n    this.renderCube(0x00cc00);\n    this.renderCube(0xcc00cc);\n    this.renderCube(0xcc0000);\n  }\n\n  render() {\n    return (\n      <div ref={ref => this.ref = ref}></div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}